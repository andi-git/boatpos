<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_1.xsd"
                 version="2.1">
    <named-query name="receipt.getBetweenByCashBox">
        <query>
            FROM ReceiptEntity r
            WHERE r.receiptDate BETWEEN :start AND :end
            AND r.cashBox.id = :cashBoxId
            ORDER BY id
        </query>
    </named-query>
    <named-query name="receipt.getLastByCashBox">
        <query>
            FROM ReceiptEntity r
            WHERE r.id IN
            (SELECT MAX(r2.id)
            FROM ReceiptEntity r2
            WHERE r2.cashBox.id = :cashBoxId)
        </query>
    </named-query>
    <named-query name="receipt.getByReceiptId">
        <query>FROM ReceiptEntity r WHERE r.receiptId = :receiptId AND r.cashBox.id = :cashBoxId</query>
    </named-query>
    <named-query name="receipt.getDEP">
        <query>
            SELECT r.dep
            FROM ReceiptEntity r
            WHERE r.receiptDate BETWEEN :start AND :end
            AND r.cashBox.id = :cashBoxId
            ORDER BY r.id
        </query>
    </named-query>
    <named-query name="receipt.getAllWithoutDEP">
        <query>FROM ReceiptEntity r WHERE r.dep = '' OR r.dep IS EMPTY OR r.dep IS NULL</query>
    </named-query>
    <named-query name="receipt.getAllWithReceiptTypeSortedDescending">
        <query>
            FROM ReceiptEntity r
            WHERE r.receiptType IS NOT NULL AND r.receiptType.name = :receiptTypeName
            AND r.cashBox.id = :cashBoxId
            ORDER BY r.receiptDate DESC
        </query>
    </named-query>
    <named-query name="receipt.getCompactJWSRepresentationsBetweenByCashBox">
        <query>
            SELECT r.compactJwsRepresentation
            FROM ReceiptEntity r
            WHERE r.receiptDate BETWEEN :start AND :end
            AND r.cashBox.id = :cashBoxId
            ORDER BY id
        </query>
    </named-query>
    <named-query name="receipt.getCompactJWSRepresentationsWhereSignatureDeviceIsAvailableBetweenByCashBox">
        <query>
            SELECT r.compactJwsRepresentation
            FROM ReceiptEntity r
            WHERE r.receiptDate BETWEEN :start AND :end
            AND r.cashBox.id = :cashBoxId
            AND r.signatureDeviceAvailable = TRUE
            ORDER BY id
        </query>
    </named-query>
    <named-query name="receipt.getCompactJWSRepresentationsWhereSignatureDeviceIsNotAvailableBetweenByCashBox">
        <query>
            SELECT r.compactJwsRepresentation
            FROM ReceiptEntity r
            WHERE r.receiptDate BETWEEN :start AND :end
            AND r.cashBox.id = :cashBoxId
            AND (r.signatureDeviceAvailable = FALSE OR r.signatureDeviceAvailable IS NULL)
            ORDER BY id
        </query>
    </named-query>
    <named-query name="receipt.getLastWhereSignatureDeviceIsNotAvailable">
        <query>
            FROM ReceiptEntity r
            WHERE r.id IN
            (SELECT MAX(r2.id)
            FROM ReceiptEntity r2
            WHERE (r2.signatureDeviceAvailable = FALSE OR r2.signatureDeviceAvailable IS NULL)
            AND r2.cashBox.id = :cashBoxId)
        </query>
    </named-query>
    <named-query name="receipt.getLastWhereSignatureDeviceIsAvailableBefore">
        <query>
            FROM ReceiptEntity r
            WHERE r.id IN
            (SELECT MAX(r2.id)
            FROM ReceiptEntity r2
            WHERE r2.signatureDeviceAvailable = TRUE
            AND r2.cashBox.id = :cashBoxId
            AND r2.receiptDate &lt; :timestamp)
        </query>
    </named-query>
    <named-query name="receipt.getFirstWhereSignatureDeviceIsNotAvailableAfter">
        <query>
            FROM ReceiptEntity r
            WHERE (r.signatureDeviceAvailable = FALSE OR r.signatureDeviceAvailable IS NULL)
            AND r.cashBox.id = :cashBoxId
            AND r.receiptDate &gt;= :timestamp
        </query>
    </named-query>
</entity-mappings>
